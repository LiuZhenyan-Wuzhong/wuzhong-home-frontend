import Head from 'next/head';
import CategoryPanel from '../../components/CategoryPanel';
import Container from '../../components/Container';
import SideBar from '../../components/SideBar';
import TagPanel from '../../components/TagPanel';
import api from '../../utils/api';
import { AllHTMLAttributes, useCallback, useEffect } from 'react';
import { Article } from '../../store/reducers/articles';
import { loadArticles } from '../../store/actions/actions';
import { useDispatch } from 'react-redux';
import normalizeList from '../../utils/normalizeList';
import { AxiosError } from 'axios';
import { getStaticBlogsData } from '../../utils/blogs';
import SubscribePanel from '../../components/SubscribePanel';
import { clsx } from 'clsx';
import BlogSection from '../../components/BlogSection';
import BlogHeader from '../../components/BlogHeader';

interface ArticleListPageProps extends AllHTMLAttributes<HTMLDivElement> {
  allBlogsData: {
    [id: string]: Article;
  };
}

export default function ArticleListPage({ allBlogsData }: ArticleListPageProps) {
  // dispatch
  const dispatch = useDispatch();

  // callback
  const handleGetArticles = useCallback(async () => {
    try {
      const res = await api.get10ArticlesReq();

      const { data: articleList } = res;

      console.log('Receive articles:');

      loadArticles(normalizeList(articleList as Article[], '_id')).then((action) =>
        dispatch(action)
      );
    } catch (err) {
      if (err instanceof AxiosError) {
        console.error(err.message);
      } else {
        console.error(err);
      }
      loadArticles({}).then((action) => dispatch(action));
    }
  }, [dispatch]);

  // effect
  useEffect(() => {
    handleGetArticles();
  }, [handleGetArticles]);

  return (
    <>
      <Head>
        <title>Wuzhong Blogs</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="dark:bg-gray-800">
        <div className="h-24 w-full bg-transparent"></div>
        <Container className="flex justify-center gap-8">
          <div id="articles-index-section" className="flex flex-col gap-4 w-full">
            <BlogSection blogs={allBlogsData} blogsPerPage={4} />
          </div>
          {/* <SideBar>
            <div className="flex flex-col rounded-xl p-6 gap-12 sticky top-20">
              <CategoryPanel />
              <TagPanel />
            </div>
          </SideBar> */}
        </Container>
      </main>
    </>
  );
}

export const getStaticProps = async () => {
  const allBlogsData = await getStaticBlogsData();
  console.log(allBlogsData);

  return {
    props: {
      allBlogsData
    }
  };
};
