import Head from 'next/head';
import Container from '../components/Container';
import { SSRConfig, useTranslation } from 'next-i18next';
import { GetStaticProps } from 'next/types';
import { serverSideTranslations } from 'next-i18next/serverSideTranslations';
import Resume from '../components/Resume';
import { useRouter } from 'next/router';
import { Locale } from '../components/Navbar';
import { useEffect, useRef, useState } from 'react';
import dynamic from 'next/dist/shared/lib/dynamic';

const ResumeController = dynamic(() => import('../components/ResumeController'), { ssr: false });

export default function ResumePage({ _nextI18Next }: SSRConfig) {
  // state
  const router = useRouter();

  const [togglesChecked, setTogglesChecked] = useState<string[]>([]);

  // ref
  const resumeRef = useRef<HTMLDivElement>(null);

  // hook
  const { t } = useTranslation('resume');

  // effect
  useEffect(() => {
    if (resumeRef.current) {
      if (togglesChecked.includes('zoomout')) {
        resumeRef.current.classList.add('scale-50');
      } else {
        resumeRef.current.classList.remove('scale-50');
      }
    }
  }, [togglesChecked, resumeRef]);

  return (
    <>
      <Head>
        <title>{t('title')}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="overflow-hidden relative bg-gray-50 flex-grow dark:bg-gray-800">
        <div className="h-24 w-full bg-transparent"></div>
        <Container id="resume-container" className="flex flex-col justify-center relative">
          <ResumeController
            className="fixed top-48 right-10 z-10"
            togglesChecked={togglesChecked}
            setTogglesChecked={setTogglesChecked}
            resumeRef={resumeRef}
          />
          <div className="w-full h-24 bg-transparent"></div>
          <Resume ref={resumeRef} locale={(router.locale as Locale) ?? Locale.en} />
          <div className="w-full h-24 bg-transparent"></div>
        </Container>
      </main>
    </>
  );
}

export const getStaticProps: GetStaticProps = async ({ locale }) => ({
  props: {
    ...(await serverSideTranslations(locale ?? 'en', ['resume']))
  }
});
