import Head from 'next/head';
import Container from '../components/Container';
import dynamic from 'next/dynamic';
import SideBar from '../components/SideBar';
import * as RadioGroup from '@radix-ui/react-radio-group';
import { setCategoryId } from '../store/actions/actions';
import CategoryRadio from '../components/CategoryRadio';
import TagCheckBox from '../components/TagCheckBox';
import Button, { ButtonType } from '../components/Button';
import { useDispatch, useSelector } from 'react-redux';

const publishState = {
  Status: 'Draft',
  Visibility: 'Public'
};

const EditorContainer = dynamic(() => import('../components/EditorContainer'), {
  ssr: false
});

export default function UploadPage() {
  // dispatch
  const dispatch = useDispatch();

  // state
  const articleState = useSelector((state) => (state as any).articleState);

  return (
    <>
      <Head>
        <title>Upload a post.</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Container className="flex 2xl:w-364">
          <div className="w-full flex lg:flex-row flex-col gap-8">
            <EditorContainer className="flex-grow" />
            <SideBar>
              <div className="p-8 flex flex-col gap-6">
                <div className="w-full flex gap-6">
                  <Button variant={ButtonType.primary}>Publish Post</Button>
                  <Button variant={ButtonType.secondary}>Save</Button>
                </div>
                <div className="w-full">
                  <div className="font-semibold mb-2">Publish</div>
                  <div className="flex flex-col gap-1">
                    {Object.keys(publishState).map((key, idx) => (
                      <div key={idx} className="flex text-sm">
                        <span className="font-semibold text-gray-600 w-36">{key}</span>
                        <span className="font-normal text-gray-500">
                          {(publishState as any)[key]}
                        </span>
                      </div>
                    ))}
                  </div>
                </div>
                <div className="w-full">
                  <div className="font-semibold mb-2">Tags</div>
                  <div className="grid grid-cols-2 text-sm gap-1 font-normal text-gray-500">
                    {Object.keys(articleState.tags).map((tagId, idx) => (
                      <TagCheckBox
                        key={tagId}
                        tagName={articleState.tags[tagId].name}
                        tagId={tagId}
                      />
                    ))}
                  </div>
                </div>
                <div className="w-full">
                  <div className="font-semibold mb-2">Category</div>

                  <RadioGroup.Root
                    id="RadioGroupRoot"
                    value={articleState.curCategoryId}
                    aria-label="View density"
                    onValueChange={(val) => {
                      setCategoryId(val).then((action) => dispatch(action));
                    }}>
                    <div className="grid grid-cols-2 text-sm gap-1 font-normal text-gray-500">
                      {Object.keys(articleState.categories).map((cid, idx) => (
                        <CategoryRadio
                          key={cid}
                          categoryId={cid}
                          categoryName={articleState.categories[cid].name}
                        />
                      ))}
                    </div>
                  </RadioGroup.Root>
                </div>
              </div>
            </SideBar>
          </div>
        </Container>
      </main>
    </>
  );
}
